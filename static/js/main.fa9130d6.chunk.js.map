{"version":3,"sources":["components/Layuot.js","components/conponents.styled.js","components/ContactForm.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["Layout","children","Container","styled","form","Title","h2","Input","input","Lable","label","Button","button","FilterBox","div","FilterInput","ContactItem","li","ItemName","p","ItemNumber","ContactBtn","Notification","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handleInputChange","target","value","this","onSubmit","htmlFor","type","id","placeholder","required","onChange","Component","ContactList","contacts","onRemove","TransitionGroup","component","className","map","CSSTransition","timeout","classNames","onClick","Html5Entities","decode","Filter","onChangeFilter","in","unmountOnExit","App","filter","alert","addContact","contact","uuidv4","prevState","uniqContact","setTimeout","contactList","find","removeContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa9130d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Layout;\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.form`\r\n  width: 60vw;\r\n  min-width: 500px;\r\n  height: auto;\r\n  box-shadow: 3px 3px 5px grey;\r\n  border: 1px solid lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n`;\r\nconst Title = styled.h2`\r\n  margin-top: 50px;\r\n  color: rgb(3, 102, 214);\r\n  font-size: 70px;\r\n  font-weight: bold;\r\n`;\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 7px;\r\n  background-color: white;\r\n  padding-left: 25px;\r\n  width: 90%;\r\n  height: 50px;\r\n  border: 2px solid gray;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  &:active,\r\n  :focus {\r\n    outline: none;\r\n    border-color: rgb(3, 102, 214);\r\n  }\r\n`;\r\nconst Lable = styled.label`\r\n  margin-left: 5%;\r\n`;\r\nconst Button = styled.button`\r\n  margin-top: 20px;\r\n  background-color: rgb(3, 102, 214);\r\n  margin-bottom: 30px;\r\n  width: 90%;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  border: 1px solid transparent;\r\n  outline: none;\r\n  color: white;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst FilterBox = styled.div`\r\n  padding-top: 30px;\r\n  width: 60vw;\r\n  min-width: 500px;\r\n  height: auto;\r\n  box-shadow: 3px 3px 5px grey;\r\n  border: 1px solid lightgray;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n`;\r\nconst FilterInput = styled.input`\r\n  margin: 2px auto 20px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  width: 90%;\r\n  height: 50px;\r\n  padding-left: 25px;\r\n  border-radius: 10px;\r\n  border: 2px solid gray;\r\n  outline: none;\r\n  &:active,\r\n  :focus {\r\n    outline: none;\r\n    border-color: rgb(3, 102, 214);\r\n  }\r\n`;\r\n\r\nconst ContactItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  margin-bottom: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 7px;\r\n  background-color: white;\r\n  width: 90%;\r\n  height: 50px;\r\n  box-shadow: 3px 3px 5px grey;\r\n  border: 1px solid lightgray;\r\n  border-radius: 10px;\r\n`;\r\nconst ItemName = styled.p`\r\n  width: 50%;\r\n  text-align: left;\r\n  margin-left: 20px;\r\n  height: auto;\r\n`;\r\nconst ItemNumber = styled.p`\r\n  width: 30%;\r\n  text-align: left;\r\n  height: auto;\r\n`;\r\nconst ContactBtn = styled.button`\r\n  background-color: whitesmoke;\r\n  font-size: 24px;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 7px;\r\n  border: 1px solid transparent;\r\n  margin-right: 10px;\r\n  background-color: red;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding-bottom: 7px;\r\n`;\r\nconst Notification = styled.div`\r\n  background-color: red;\r\n  width: 300px;\r\n  position: absolute;\r\n  top: 50px;\r\n  right: 20%;\r\n  text-align: center;\r\n  height: 70px;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  padding-top: 20px;\r\n\r\n  font-size: 22px;\r\n  color: white;\r\n`;\r\nexport {\r\n  Title,\r\n  Container,\r\n  Input,\r\n  Lable,\r\n  Button,\r\n  ItemName,\r\n  ItemNumber,\r\n  ContactItem,\r\n  ContactBtn,\r\n  FilterBox,\r\n  FilterInput,\r\n  Notification,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, Input, Button, Lable } from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    value: PropTypes.string,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    if (this.state) e.preventDefault();\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Container onSubmit={this.handleSubmit}>\r\n        <Lable htmlFor=\"name\"> Name</Lable>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Name Surname\"\r\n          required\r\n          value={name}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <Lable htmlFor=\"number\"> Number</Lable>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id=\"number\"\r\n          placeholder=\"667-67-67\"\r\n          required\r\n          value={number}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ContactItem,\r\n  ContactBtn,\r\n  ItemName,\r\n  ItemNumber,\r\n} from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Html5Entities } from \"html-entities\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nexport default function ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"Item-fade\">\r\n          <ContactItem>\r\n            <ItemName>{name}</ItemName>\r\n            <ItemNumber>{number}</ItemNumber>\r\n            <ContactBtn onClick={() => onRemove(id)}>\r\n              {Html5Entities.decode(\"&#10006\")}\r\n            </ContactBtn>\r\n          </ContactItem>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onRemove: PropTypes.func,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { FilterBox, FilterInput, Lable } from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      timeout={500}\r\n      classNames=\"Filter-fade\"\r\n      unmountOnExit\r\n    >\r\n      <FilterBox>\r\n        <Lable htmlFor=\"filter\">Find contacts by name </Lable>\r\n        <FilterInput\r\n          type=\"text\"\r\n          id=\"filter\"\r\n          placeholder=\"search...\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n        ></FilterInput>\r\n      </FilterBox>\r\n    </CSSTransition>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport Layout from \"./Layuot\";\nimport ContactForm from \"./ContactForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\nimport { Title, Notification } from \"./conponents.styled\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./transition.css\";\n\nexport default class App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    filter: PropTypes.string,\n  };\n  state = {\n    contacts: [],\n    filter: \"\",\n    alert: false,\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState((prevState) => {\n      return !this.uniqContact(contact)\n        ? {\n            contacts: [...prevState.contacts, contact],\n            alert: false,\n          }\n        : this.setState({ alert: true });\n    });\n    setTimeout(() => this.setState({ alert: false }), 1500);\n  };\n\n  uniqContact = (contactList) => {\n    const { contacts } = this.state;\n    return contacts.find(({ name }) => name === contactList.name);\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  render() {\n    const { filter, contacts, alert } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <Layout>\n        <CSSTransition\n          in={true}\n          appear\n          timeout={250}\n          classNames=\"Title-fade\"\n          unmountOnExit\n        >\n          <Title>Phonebook</Title>\n        </CSSTransition>\n        <ContactForm onAddContact={this.addContact} />\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={250}\n          classNames=\"Filter-fade\"\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        <CSSTransition\n          in={contacts.length > 0}\n          appear\n          timeout={250}\n          classNames=\"List-fade\"\n          unmountOnExit\n        >\n          <ContactList\n            contacts={filteredContacts}\n            onRemove={this.removeContact}\n          />\n        </CSSTransition>\n\n        <CSSTransition\n          in={alert}\n          appear\n          classNames=\"Notification-fade\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification>Contact already exists!</Notification>\n        </CSSTransition>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./components/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}